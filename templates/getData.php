<?php
$data = '
{"Class1": {"Java": {"func_info_list": [{"annotation": "", "body": "public static void readOne(JsonObject data) {\n        class readOneCB {\n            public void successCB(String result) {\n                System.out.println(\"successCB: \" + result);\n            }\n            public void errorCB(String message) {\n                System.out.println(\"errorCB: \" + message);\n            }\n        }\n        readOneCB CBModel = new readOneCB();\n        Adapter.readOne(className, data, CBModel);\n    }\n    ", "examples": ["{\u0027_id\u0027: \u0027specific id (String)\u0027}", "{\u0027class1Attribute1\u0027: \u0027some value (Integer)\u0027}"], "name": "readOne"}, {"annotation": "", "body": "public static void readAll(JsonObject data) {\n        class readAllCB {\n            public void successCB(String result) {\n                System.out.println(\"successCB: \" + result);\n            }\n            public void errorCB(String message) {\n                System.out.println(\"errorCB: \" + message);\n            }\n        }\n        readAllCB CBModel = new readAllCB();\n        Adapter.readAll(className, data, CBModel);\n    }\n    ", "examples": [], "name": "readAll"}, {"annotation": "", "body": "public static void create(JsonObject data) {\n        class createCB {\n            public void successCB(String result) {\n                System.out.println(\"successCB: \" + result);\n            }\n            public void errorCB(String message) {\n                System.out.println(\"errorCB: \" + message);\n            }\n        }\n        createCB CBModel = new createCB();\n        Adapter.create(className, data, CBModel);\n    }\n    ", "examples": ["{\u0027class1Attribute1\u0027: \u0027some value (Integer)\u0027}", "[{\u0027class1Attribute1\u0027: \u0027some value (Integer)\u0027}, {\u0027class1Attribute1\u0027: \u0027some other value (Integer)\u0027}]"], "name": "create"}, {"annotation": "", "body": "public static void update(JsonObject data) {\n        class updateCB {\n            public void successCB(String result) {\n                System.out.println(\"successCB: \" + result);\n            }\n            public void errorCB(String message) {\n                System.out.println(\"errorCB: \" + message);\n            }\n        }\n        updateCB CBModel = new updateCB();\n        Adapter.update(className, data, CBModel);\n    }\n    ", "examples": ["{\u0027oldData\u0027: {\u0027_id\u0027: \u0027specific id (String)\u0027}, \u0027newData\u0027: {\u0027class1Attribute1\u0027: \u0027some value (Integer)\u0027}}", "{\u0027oldData\u0027: {\u0027class1Attribute1\u0027: \u0027some value (Integer)\u0027}, \u0027newData\u0027: {\u0027class1Attribute1\u0027: \u0027some other value (Integer)\u0027}}"], "name": "update"}, {"annotation": "", "body": "public static void delete(JsonObject data) {\n        class deleteCB {\n            public void successCB(String result) {\n                System.out.println(\"successCB: \" + result);\n            }\n            public void errorCB(String message) {\n                System.out.println(\"errorCB: \" + message);\n            }\n        }\n        deleteCB CBModel = new deleteCB();\n        Adapter.delete(className, data, CBModel);\n    }\n    ", "examples": ["{\u0027_id\u0027: \u0027specific id (String)\u0027}", "{\u0027class1Attribute1\u0027: \u0027some value (Integer)\u0027}"], "name": "delete"}]}, "JavaScript": {"func_info_list": [{"annotation": " just test\nlalala\n", "body": "\nClass1.create = function(data, success, error) {\n    // Wrap data\n\n    // Define callback function\n    function successCB(msg) {\n        // Success handling\n        success(msg);\n    }\n\n    function errorCB(msg) {\n        // Error handling\n        error(msg);\n    }\n\n    DBAdapter.createOne(Class1.name, data, successCB, errorCB);\n};\n", "examples": ["{\u0027class1Attribute1\u0027: \u0027some value (Integer)\u0027}", "[{\u0027class1Attribute1\u0027: \u0027some value (Integer)\u0027}, {\u0027class1Attribute1\u0027: \u0027some other value (Integer)\u0027}]"], "name": "create"}, {"annotation": "", "body": "Class1.read = function(data, success, error) {\n    // Wrap data\n\n    // Define callback function\n    function successCB(msg) {\n        // Success handling\n        success(msg);\n    }\n\n    function errorCB(msg) {\n        // Error handling\n        error(msg);\n    }\n\n    DBAdapter.readOne(Class1.name, data, successCB, errorCB);\n};\n", "examples": ["{\u0027_id\u0027: \u0027specific id (String)\u0027}", "{\u0027class1Attribute1\u0027: \u0027some value (Integer)\u0027}"], "name": "read"}, {"annotation": "", "body": "Class1.update = function(search, update, success, error) {\n    // Wrap data\n    var data = {\n        oldData : search,\n        newData : update\n    };\n\n    // Define callback function\n    function successCB(msg) {\n        // Success handling\n        success(msg);\n    }\n\n    function errorCB(msg) {\n        // Error handling\n        error(msg);\n    }\n\n    DBAdapter.update(Class1.name, data, successCB, errorCB);\n};\n", "examples": ["{\u0027oldData\u0027: {\u0027_id\u0027: \u0027specific id (String)\u0027}, \u0027newData\u0027: {\u0027class1Attribute1\u0027: \u0027some value (Integer)\u0027}}", "{\u0027oldData\u0027: {\u0027class1Attribute1\u0027: \u0027some value (Integer)\u0027}, \u0027newData\u0027: {\u0027class1Attribute1\u0027: \u0027some other value (Integer)\u0027}}"], "name": "update"}, {"annotation": "", "body": "Class1.delete = function(data, success, error) {\n    // Wrap data\n\n    // Define callback function\n    function successCB(msg) {\n        // Success handling\n        success(msg);\n    }\n\n    function errorCB(msg) {\n        // Error handling\n        error(msg);\n    }\n\n    DBAdapter.delete(Class1.name, data, successCB, errorCB);\n};\n", "examples": ["{\u0027_id\u0027: \u0027specific id (String)\u0027}", "{\u0027class1Attribute1\u0027: \u0027some value (Integer)\u0027}"], "name": "delete"}]}, "attribute_list": [{"name": "class1Attribute1", "type": "Integer"}]}, "Class2": {"Java": {"func_info_list": [{"annotation": "", "body": "public static void readOne(JsonObject data) {\n        class readOneCB {\n            public void successCB(String result) {\n                System.out.println(\"successCB: \" + result);\n            }\n            public void errorCB(String message) {\n                System.out.println(\"errorCB: \" + message);\n            }\n        }\n        readOneCB CBModel = new readOneCB();\n        Adapter.readOne(className, data, CBModel);\n    }\n    ", "examples": ["{\u0027_id\u0027: \u0027specific id (String)\u0027}", "{\u0027class2Attribute2\u0027: \u0027some value (String)\u0027}"], "name": "readOne"}, {"annotation": "", "body": "public static void readAll(JsonObject data) {\n        class readAllCB {\n            public void successCB(String result) {\n                System.out.println(\"successCB: \" + result);\n            }\n            public void errorCB(String message) {\n                System.out.println(\"errorCB: \" + message);\n            }\n        }\n        readAllCB CBModel = new readAllCB();\n        Adapter.readAll(className, data, CBModel);\n    }\n    ", "examples": [], "name": "readAll"}, {"annotation": "", "body": "public static void create(JsonObject data) {\n        class createCB {\n            public void successCB(String result) {\n                System.out.println(\"successCB: \" + result);\n            }\n            public void errorCB(String message) {\n                System.out.println(\"errorCB: \" + message);\n            }\n        }\n        createCB CBModel = new createCB();\n        Adapter.create(className, data, CBModel);\n    }\n    ", "examples": ["{\u0027class2Attribute2\u0027: \u0027some value (String)\u0027}", "[{\u0027class2Attribute2\u0027: \u0027some value (String)\u0027}, {\u0027class2Attribute2\u0027: \u0027some other value (String)\u0027}]"], "name": "create"}, {"annotation": "", "body": "public static void update(JsonObject data) {\n        class updateCB {\n            public void successCB(String result) {\n                System.out.println(\"successCB: \" + result);\n            }\n            public void errorCB(String message) {\n                System.out.println(\"errorCB: \" + message);\n            }\n        }\n        updateCB CBModel = new updateCB();\n        Adapter.update(className, data, CBModel);\n    }\n    ", "examples": ["{\u0027oldData\u0027: {\u0027_id\u0027: \u0027specific id (String)\u0027}, \u0027newData\u0027: {\u0027class2Attribute2\u0027: \u0027some value (String)\u0027}}", "{\u0027oldData\u0027: {\u0027class2Attribute2\u0027: \u0027some value (String)\u0027}, \u0027newData\u0027: {\u0027class2Attribute2\u0027: \u0027some other value (String)\u0027}}"], "name": "update"}, {"annotation": "", "body": "public static void delete(JsonObject data) {\n        class deleteCB {\n            public void successCB(String result) {\n                System.out.println(\"successCB: \" + result);\n            }\n            public void errorCB(String message) {\n                System.out.println(\"errorCB: \" + message);\n            }\n        }\n        deleteCB CBModel = new deleteCB();\n        Adapter.delete(className, data, CBModel);\n    }\n    ", "examples": ["{\u0027_id\u0027: \u0027specific id (String)\u0027}", "{\u0027class2Attribute2\u0027: \u0027some value (String)\u0027}"], "name": "delete"}]}, "JavaScript": {"func_info_list": [{"annotation": " just test\nlalala\n", "body": "\nClass2.create = function(data, success, error) {\n    // Wrap data\n\n    // Define callback function\n    function successCB(msg) {\n        // Success handling\n        success(msg);\n    }\n\n    function errorCB(msg) {\n        // Error handling\n        error(msg);\n    }\n\n    DBAdapter.createOne(Class2.name, data, successCB, errorCB);\n};\n", "examples": ["{\u0027class2Attribute2\u0027: \u0027some value (String)\u0027}", "[{\u0027class2Attribute2\u0027: \u0027some value (String)\u0027}, {\u0027class2Attribute2\u0027: \u0027some other value (String)\u0027}]"], "name": "create"}, {"annotation": "", "body": "Class2.read = function(data, success, error) {\n    // Wrap data\n\n    // Define callback function\n    function successCB(msg) {\n        // Success handling\n        success(msg);\n    }\n\n    function errorCB(msg) {\n        // Error handling\n        error(msg);\n    }\n\n    DBAdapter.readOne(Class2.name, data, successCB, errorCB);\n};\n", "examples": ["{\u0027_id\u0027: \u0027specific id (String)\u0027}", "{\u0027class2Attribute2\u0027: \u0027some value (String)\u0027}"], "name": "read"}, {"annotation": "", "body": "Class2.update = function(search, update, success, error) {\n    // Wrap data\n    var data = {\n        oldData : search,\n        newData : update\n    };\n\n    // Define callback function\n    function successCB(msg) {\n        // Success handling\n        success(msg);\n    }\n\n    function errorCB(msg) {\n        // Error handling\n        error(msg);\n    }\n\n    DBAdapter.update(Class2.name, data, successCB, errorCB);\n};\n", "examples": ["{\u0027oldData\u0027: {\u0027_id\u0027: \u0027specific id (String)\u0027}, \u0027newData\u0027: {\u0027class2Attribute2\u0027: \u0027some value (String)\u0027}}", "{\u0027oldData\u0027: {\u0027class2Attribute2\u0027: \u0027some value (String)\u0027}, \u0027newData\u0027: {\u0027class2Attribute2\u0027: \u0027some other value (String)\u0027}}"], "name": "update"}, {"annotation": "", "body": "Class2.delete = function(data, success, error) {\n    // Wrap data\n\n    // Define callback function\n    function successCB(msg) {\n        // Success handling\n        success(msg);\n    }\n\n    function errorCB(msg) {\n        // Error handling\n        error(msg);\n    }\n\n    DBAdapter.delete(Class2.name, data, successCB, errorCB);\n};\n", "examples": ["{\u0027_id\u0027: \u0027specific id (String)\u0027}", "{\u0027class2Attribute2\u0027: \u0027some value (String)\u0027}"], "name": "delete"}]}, "attribute_list": [{"name": "class2Attribute2", "type": "String"}, {"name": "class2Attribute1", "type": "Integer"}]}, "Class3": {"Java": {"func_info_list": [{"annotation": "", "body": "public static void readOne(JsonObject data) {\n        class readOneCB {\n            public void successCB(String result) {\n                System.out.println(\"successCB: \" + result);\n            }\n            public void errorCB(String message) {\n                System.out.println(\"errorCB: \" + message);\n            }\n        }\n        readOneCB CBModel = new readOneCB();\n        Adapter.readOne(className, data, CBModel);\n    }\n    ", "examples": [], "name": "readOne"}, {"annotation": "", "body": "public static void readAll(JsonObject data) {\n        class readAllCB {\n            public void successCB(String result) {\n                System.out.println(\"successCB: \" + result);\n            }\n            public void errorCB(String message) {\n                System.out.println(\"errorCB: \" + message);\n            }\n        }\n        readAllCB CBModel = new readAllCB();\n        Adapter.readAll(className, data, CBModel);\n    }\n    ", "examples": [], "name": "readAll"}, {"annotation": "", "body": "public static void create(JsonObject data) {\n        class createCB {\n            public void successCB(String result) {\n                System.out.println(\"successCB: \" + result);\n            }\n            public void errorCB(String message) {\n                System.out.println(\"errorCB: \" + message);\n            }\n        }\n        createCB CBModel = new createCB();\n        Adapter.create(className, data, CBModel);\n    }\n    ", "examples": [], "name": "create"}, {"annotation": "", "body": "public static void update(JsonObject data) {\n        class updateCB {\n            public void successCB(String result) {\n                System.out.println(\"successCB: \" + result);\n            }\n            public void errorCB(String message) {\n                System.out.println(\"errorCB: \" + message);\n            }\n        }\n        updateCB CBModel = new updateCB();\n        Adapter.update(className, data, CBModel);\n    }\n    ", "examples": [], "name": "update"}, {"annotation": "", "body": "public static void delete(JsonObject data) {\n        class deleteCB {\n            public void successCB(String result) {\n                System.out.println(\"successCB: \" + result);\n            }\n            public void errorCB(String message) {\n                System.out.println(\"errorCB: \" + message);\n            }\n        }\n        deleteCB CBModel = new deleteCB();\n        Adapter.delete(className, data, CBModel);\n    }\n    ", "examples": [], "name": "delete"}]}, "JavaScript": {"func_info_list": [{"annotation": " just test\nlalala\n", "body": "\nClass3.create = function(data, success, error) {\n    // Wrap data\n\n    // Define callback function\n    function successCB(msg) {\n        // Success handling\n        success(msg);\n    }\n\n    function errorCB(msg) {\n        // Error handling\n        error(msg);\n    }\n\n    DBAdapter.createOne(Class3.name, data, successCB, errorCB);\n};\n", "examples": [], "name": "create"}, {"annotation": "", "body": "Class3.read = function(data, success, error) {\n    // Wrap data\n\n    // Define callback function\n    function successCB(msg) {\n        // Success handling\n        success(msg);\n    }\n\n    function errorCB(msg) {\n        // Error handling\n        error(msg);\n    }\n\n    DBAdapter.readOne(Class3.name, data, successCB, errorCB);\n};\n", "examples": [], "name": "read"}, {"annotation": "", "body": "Class3.update = function(search, update, success, error) {\n    // Wrap data\n    var data = {\n        oldData : search,\n        newData : update\n    };\n\n    // Define callback function\n    function successCB(msg) {\n        // Success handling\n        success(msg);\n    }\n\n    function errorCB(msg) {\n        // Error handling\n        error(msg);\n    }\n\n    DBAdapter.update(Class3.name, data, successCB, errorCB);\n};\n", "examples": [], "name": "update"}, {"annotation": "", "body": "Class3.delete = function(data, success, error) {\n    // Wrap data\n\n    // Define callback function\n    function successCB(msg) {\n        // Success handling\n        success(msg);\n    }\n\n    function errorCB(msg) {\n        // Error handling\n        error(msg);\n    }\n\n    DBAdapter.delete(Class3.name, data, successCB, errorCB);\n};\n", "examples": [], "name": "delete"}]}, "attribute_list": []}}
';

//str_replace("\\r\\n", "\\n", $data);
echo $data;
////str_replace(array("\r\n", "\r", "\n", "”", "“", "\""), "",$data);
//echo $data;
//echo json_encode($data);
//echo(str_replace("\r\n", "\n", json_encode($data)));
//echo $data;
?>

